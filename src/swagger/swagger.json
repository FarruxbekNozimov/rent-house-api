{
	"openapi": "3.0.0",
	"info": {
		"title": "API Documentation",
		"version": "1.0.0",
		"description": "Documentation for your API"
	},
	"paths": {
		"/api/auth/register": {
			"post": {
				"summary": "Register a new user",
				"tags": ["Auth"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/Schemas/User" }
						}
					}
				},
				"responses": {
					"201": { "description": "User registered successfully" },
					"400": { "description": "Username already exists" },
					"500": { "description": "Server Error" }
				}
			}
		},
		"/api/auth/login": {
			"post": {
				"summary": "Login a user",
				"tags": ["Auth"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/Schemas/Login" }
						}
					}
				},
				"responses": {
					"201": { "description": "User login successfully" },
					"400": { "description": "This User is not found" },
					"500": { "description": "Server Error" }
				}
			}
		},
		"/api/rent": {
			"post": {
				"tags": ["Rent"],
				"summary": "Create a rent",
				"parameters": [
					{
						"name": "rent",
						"in": "body",
						"description": "Rent object",
						"required": true,
						"schema": { "$ref": "#/components/Schemas/RentInput" }
					}
				],
				"responses": {
					"500": { "description": "Internal server error" }
				}
			},
			"get": {
				"tags": ["Rent"],
				"summary": "Get all rent",
				"responses": {
					"200": {
						"description": "Successful operation",
						"schema": {
							"type": "array",
							"items": { "$ref": "#/components/Schemas/Rent" }
						}
					},
					"500": { "description": "Internal server error" }
				}
			}
		},
		"/api/rent/{id}": {
			"get": {
				"tags": ["Rent"],
				"summary": "Get a rent by ID",
				"responses": {
					"200": {
						"description": "Successful operation",
						"schema": { "$ref": "#/components/Schemas/Rent" }
					},
					"404": { "description": "Rent not found" },
					"500": { "description": "Internal server error" }
				}
			},
			"put": {
				"tags": ["Rent"],
				"summary": "Update a rent",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of the rent",
						"required": true,
						"type": "string"
					},
					{
						"name": "rent",
						"in": "body",
						"description": "Updated rent object",
						"required": true,
						"schema": { "$ref": "#/components/Schemas/RentInput" }
					}
				],
				"responses": {
					"200": {
						"description": "Rent updated successfully",
						"schema": { "$ref": "#/components/Schemas/Rent" }
					},
					"404": {
						"description": "Rent not found"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"delete": {
				"tags": ["Rent"],
				"summary": "Delete a rent",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of the rent",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Rent deleted successfully"
					},
					"404": {
						"description": "Rent not found"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		}
	},
	"components": {
		"Schemas": {
			"User": {
				"type": "object",
				"properties": {
					"first_name": { "type": "string" },
					"last_name": { "type": "string" },
					"username": { "type": "string" },
					"password": { "type": "string" },
					"email": { "type": "string" },
					"phone": { "type": "string" }
				},
				"example": {
					"first_name": "John",
					"last_name": "Doe",
					"password": "password123",
					"email": "john@example.com",
					"phone": "1234567890"
				}
			},
			"Login": {
				"type": "object",
				"properties": {
					"phone": { "type": "string" },
					"password": { "type": "string" }
				},
				"example": { "phone": "1234567890", "password": "password123" }
			},
			"Rent": {
				"type": "object",
				"properties": {
					"region_id": { "type": "string" },
					"district_id": { "type": "string" },
					"address": { "type": "string" },
					"location": { "type": "string" },
					"gas": { "type": "boolean", "default": false },
					"light": { "type": "boolean", "default": false },
					"water_cold": { "type": "boolean", "default": false },
					"water_hot": { "type": "boolean", "default": false },
					"conditioner": { "type": "boolean", "default": false },
					"freezer": { "type": "boolean", "default": false },
					"status": {
						"type": "string",
						"enum": ["available", "rented"],
						"default": "available"
					},
					"price": { "type": "number" },
					"square_meter": { "type": "number" },
					"is_floor": { "type": "boolean", "default": false },
					"home_floor": { "type": "number", "default": 1 },
					"total_floor": { "type": "number", "default": 1 },
					"rent_photo": { "type": "string" },
					"user_id": { "type": "string" }
				}
			},
			"RentInput": {
				"type": "object",
				"properties": {
					"region_id": {
						"type": "string"
					},
					"district_id": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"location": {
						"type": "string"
					},
					"gas": {
						"type": "boolean"
					},
					"light": {
						"type": "boolean"
					},
					"water_cold": {
						"type": "boolean"
					},
					"water_hot": {
						"type": "boolean"
					},
					"conditioner": {
						"type": "boolean"
					},
					"freezer": {
						"type": "boolean"
					},
					"status": {
						"type": "string",
						"enum": ["available", "rented"]
					},
					"price": {
						"type": "number"
					},
					"square_meter": {
						"type": "number"
					},
					"is_floor": {
						"type": "boolean"
					},
					"home_floor": {
						"type": "number"
					},
					"total_floor": {
						"type": "number"
					},
					"rent_photo": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					}
				}
			}
		}
	}
}
